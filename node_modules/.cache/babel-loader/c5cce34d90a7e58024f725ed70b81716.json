{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\Aman\\\\Desktop\\\\react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\Aman\\\\Desktop\\\\react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\Users\\\\Aman\\\\Desktop\\\\react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{fetchDailyData}from\"../../API\";import{Line,Bar}from\"react-chartjs-2\";import\"./charti.css\";var Chart=function Chart(_ref){var data=_ref.data,country=_ref.country;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),dailyData=_useState2[0],setDailyData=_useState2[1];useEffect(function(){var fetchData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.t0=setDailyData;_context.next=3;return fetchDailyData();case 3:_context.t1=_context.sent;(0,_context.t0)(_context.t1);case 5:case\"end\":return _context.stop();}}},_callee);}));return function fetchData(){return _ref2.apply(this,arguments);};}();fetchData();},[]);var lineChart=dailyData.length?/*#__PURE__*/React.createElement(Line,{data:{labels:dailyData.map(function(_ref3){var date=_ref3.date;return date;}),datasets:[{data:dailyData.map(function(_ref4){var confirmed=_ref4.confirmed;return confirmed;}),label:\"Infected\",borderColor:\"#3333ff\",fill:true},{data:dailyData.map(function(_ref5){var deaths=_ref5.deaths;return deaths;}),label:\"Deaths\",borderColor:\"red\",backgroundColor:\"rgba(255,0,0,0.5)\",fill:true}]}}):null;var barChart=data.confirmed?/*#__PURE__*/React.createElement(Bar,{data:{labels:[\"Infected\",\"Recovered\",\"Deaths\"],datasets:[{label:\"People\",backgroundColor:[\"rgba(0,0,255,0.5)\",\"rgba(0,255,0,0.5)\",\"rgba(255,0,0,0.5)\"],data:[data.confirmed.value,data.recovered.value,data.deaths.value]}]},options:{legend:{display:false},title:{display:true,text:\"Current State in \".concat(country)}}}):null;return/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},country?barChart:lineChart);};export default Chart;","map":{"version":3,"sources":["C:/Users/Aman/Desktop/react-app/src/Component/Charts/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","Chart","data","country","dailyData","setDailyData","fetchData","lineChart","length","labels","map","date","datasets","confirmed","label","borderColor","fill","deaths","backgroundColor","barChart","value","recovered","legend","display","title","text"],"mappings":"0dAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,cAAT,KAA+B,WAA/B,CACA,OAASC,IAAT,CAAeC,GAAf,KAA0B,iBAA1B,CAEA,MAAO,cAAP,CAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,MAAuB,IAApBC,CAAAA,IAAoB,MAApBA,IAAoB,CAAdC,OAAc,MAAdA,OAAc,eACDP,QAAQ,CAAC,EAAD,CADP,wCAC5BQ,SAD4B,eACjBC,YADiB,eAGnCR,SAAS,CAAC,UAAM,CACd,GAAMS,CAAAA,SAAS,2FAAG,+IAChBD,YADgB,uBACGP,CAAAA,cAAc,EADjB,qHAAH,kBAATQ,CAAAA,SAAS,2CAAf,CAIAA,SAAS,GACV,CANQ,CAMN,EANM,CAAT,CAQA,GAAMC,CAAAA,SAAS,CAAGH,SAAS,CAACI,MAAV,cAChB,oBAAC,IAAD,EACE,IAAI,CAAE,CACJC,MAAM,CAAEL,SAAS,CAACM,GAAV,CAAc,mBAAGC,CAAAA,IAAH,OAAGA,IAAH,OAAcA,CAAAA,IAAd,EAAd,CADJ,CAEJC,QAAQ,CAAE,CACR,CACEV,IAAI,CAAEE,SAAS,CAACM,GAAV,CAAc,mBAAGG,CAAAA,SAAH,OAAGA,SAAH,OAAmBA,CAAAA,SAAnB,EAAd,CADR,CAEEC,KAAK,CAAE,UAFT,CAGEC,WAAW,CAAE,SAHf,CAIEC,IAAI,CAAE,IAJR,CADQ,CAOR,CACEd,IAAI,CAAEE,SAAS,CAACM,GAAV,CAAc,mBAAGO,CAAAA,MAAH,OAAGA,MAAH,OAAgBA,CAAAA,MAAhB,EAAd,CADR,CAEEH,KAAK,CAAE,QAFT,CAGEC,WAAW,CAAE,KAHf,CAIEG,eAAe,CAAE,mBAJnB,CAKEF,IAAI,CAAE,IALR,CAPQ,CAFN,CADR,EADgB,CAqBd,IArBJ,CAuBA,GAAMG,CAAAA,QAAQ,CAAGjB,IAAI,CAACW,SAAL,cACf,oBAAC,GAAD,EACE,IAAI,CAAE,CACJJ,MAAM,CAAE,CAAC,UAAD,CAAa,WAAb,CAA0B,QAA1B,CADJ,CAEJG,QAAQ,CAAE,CACR,CACEE,KAAK,CAAE,QADT,CAEEI,eAAe,CAAE,CACf,mBADe,CAEf,mBAFe,CAGf,mBAHe,CAFnB,CAOEhB,IAAI,CAAE,CACJA,IAAI,CAACW,SAAL,CAAeO,KADX,CAEJlB,IAAI,CAACmB,SAAL,CAAeD,KAFX,CAGJlB,IAAI,CAACe,MAAL,CAAYG,KAHR,CAPR,CADQ,CAFN,CADR,CAmBE,OAAO,CAAE,CACPE,MAAM,CAAE,CAAEC,OAAO,CAAE,KAAX,CADD,CAEPC,KAAK,CAAE,CAAED,OAAO,CAAE,IAAX,CAAiBE,IAAI,4BAAsBtB,OAAtB,CAArB,CAFA,CAnBX,EADe,CAyBb,IAzBJ,CA2BA,mBAAO,2BAAK,SAAS,CAAC,WAAf,EAA4BA,OAAO,CAAGgB,QAAH,CAAcZ,SAAjD,CAAP,CACD,CA9DD,CAgEA,cAAeN,CAAAA,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyData } from \"../../API\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\n\r\nimport \"./charti.css\";\r\n\r\nconst Chart = ({ data, country }) => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setDailyData(await fetchDailyData());\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const lineChart = dailyData.length ? (\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map(({ date }) => date),\r\n        datasets: [\r\n          {\r\n            data: dailyData.map(({ confirmed }) => confirmed),\r\n            label: \"Infected\",\r\n            borderColor: \"#3333ff\",\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyData.map(({ deaths }) => deaths),\r\n            label: \"Deaths\",\r\n            borderColor: \"red\",\r\n            backgroundColor: \"rgba(255,0,0,0.5)\",\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  const barChart = data.confirmed ? (\r\n    <Bar\r\n      data={{\r\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\r\n        datasets: [\r\n          {\r\n            label: \"People\",\r\n            backgroundColor: [\r\n              \"rgba(0,0,255,0.5)\",\r\n              \"rgba(0,255,0,0.5)\",\r\n              \"rgba(255,0,0,0.5)\",\r\n            ],\r\n            data: [\r\n              data.confirmed.value,\r\n              data.recovered.value,\r\n              data.deaths.value,\r\n            ],\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        legend: { display: false },\r\n        title: { display: true, text: `Current State in ${country}` },\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  return <div className=\"container\">{country ? barChart : lineChart}</div>;\r\n};\r\n\r\nexport default Chart;\r\n"]},"metadata":{},"sourceType":"module"}